// Code generated by xgen. DO NOT EDIT.

package ooxml

import (
	"encoding/xml"
	"time"
)

// STVectorBaseType ...
type STVectorBaseType string

const (
	STVectorBaseType_variant  STVectorBaseType = "variant"
	STVectorBaseType_i1       STVectorBaseType = "i1"
	STVectorBaseType_i2       STVectorBaseType = "i2"
	STVectorBaseType_i4       STVectorBaseType = "i4"
	STVectorBaseType_i8       STVectorBaseType = "i8"
	STVectorBaseType_ui1      STVectorBaseType = "ui1"
	STVectorBaseType_ui2      STVectorBaseType = "ui2"
	STVectorBaseType_ui4      STVectorBaseType = "ui4"
	STVectorBaseType_ui8      STVectorBaseType = "ui8"
	STVectorBaseType_r4       STVectorBaseType = "r4"
	STVectorBaseType_r8       STVectorBaseType = "r8"
	STVectorBaseType_lpstr    STVectorBaseType = "lpstr"
	STVectorBaseType_lpwstr   STVectorBaseType = "lpwstr"
	STVectorBaseType_bstr     STVectorBaseType = "bstr"
	STVectorBaseType_date     STVectorBaseType = "date"
	STVectorBaseType_filetime STVectorBaseType = "filetime"
	STVectorBaseType_bool     STVectorBaseType = "bool"
	STVectorBaseType_cy       STVectorBaseType = "cy"
	STVectorBaseType_error    STVectorBaseType = "error"
	STVectorBaseType_clsid    STVectorBaseType = "clsid"
)

// STArrayBaseType ...
type STArrayBaseType string

const (
	STArrayBaseType_variant STArrayBaseType = "variant"
	STArrayBaseType_i1      STArrayBaseType = "i1"
	STArrayBaseType_i2      STArrayBaseType = "i2"
	STArrayBaseType_i4      STArrayBaseType = "i4"
	STArrayBaseType_int     STArrayBaseType = "int"
	STArrayBaseType_ui1     STArrayBaseType = "ui1"
	STArrayBaseType_ui2     STArrayBaseType = "ui2"
	STArrayBaseType_ui4     STArrayBaseType = "ui4"
	STArrayBaseType_uint    STArrayBaseType = "uint"
	STArrayBaseType_r4      STArrayBaseType = "r4"
	STArrayBaseType_r8      STArrayBaseType = "r8"
	STArrayBaseType_decimal STArrayBaseType = "decimal"
	STArrayBaseType_bstr    STArrayBaseType = "bstr"
	STArrayBaseType_date    STArrayBaseType = "date"
	STArrayBaseType_bool    STArrayBaseType = "bool"
	STArrayBaseType_cy      STArrayBaseType = "cy"
	STArrayBaseType_error   STArrayBaseType = "error"
)

// STCy ...
// Pattern: \s*[0-9]*\.[0-9]{4}\s*
type STCy string

// STError ...
// Pattern: \s*0x[0-9A-Za-z]{8}\s*
type STError string

// CTEmpty ...
type CTEmpty struct {
	XMLName xml.Name `xml:"CT_Empty"`
}

// CTNull ...
type CTNull struct {
	XMLName xml.Name `xml:"CT_Null"`
}

// CTVector ...
type CTVector struct {
	XMLName      xml.Name   `xml:"CT_Vector"`
	BaseTypeAttr string     `xml:"baseType,attr"`
	SizeAttr     uint32     `xml:"size,attr"`
	Variant      *CTVariant `xml:"variant"`
	I1           byte       `xml:"i1"`
	I2           int16      `xml:"i2"`
	I4           int        `xml:"i4"`
	I8           int64      `xml:"i8"`
	Ui1          byte       `xml:"ui1"`
	Ui2          uint16     `xml:"ui2"`
	Ui4          uint32     `xml:"ui4"`
	Ui8          uint64     `xml:"ui8"`
	R4           *Float     `xml:"r4"`
	R8           float64    `xml:"r8"`
	Lpstr        string     `xml:"lpstr"`
	Lpwstr       string     `xml:"lpwstr"`
	Bstr         string     `xml:"bstr"`
	Date         time.Time  `xml:"date"`
	Filetime     time.Time  `xml:"filetime"`
	Bool         bool       `xml:"bool"`
	Cy           string     `xml:"cy"`
	Error        string     `xml:"error"`
	Clsid        string     `xml:"clsid"`
}

// CTArray ...
type CTArray struct {
	XMLName      xml.Name   `xml:"CT_Array"`
	LBoundsAttr  int        `xml:"lBounds,attr"`
	UBoundsAttr  int        `xml:"uBounds,attr"`
	BaseTypeAttr string     `xml:"baseType,attr"`
	Variant      *CTVariant `xml:"variant"`
	I1           byte       `xml:"i1"`
	I2           int16      `xml:"i2"`
	I4           int        `xml:"i4"`
	Int          int        `xml:"int"`
	Ui1          byte       `xml:"ui1"`
	Ui2          uint16     `xml:"ui2"`
	Ui4          uint32     `xml:"ui4"`
	Uint         uint32     `xml:"uint"`
	R4           *Float     `xml:"r4"`
	R8           float64    `xml:"r8"`
	Decimal      float64    `xml:"decimal"`
	Bstr         string     `xml:"bstr"`
	Date         time.Time  `xml:"date"`
	Bool         bool       `xml:"bool"`
	Error        string     `xml:"error"`
	Cy           string     `xml:"cy"`
}

// CTVariant ...
type CTVariant struct {
	XMLName  xml.Name   `xml:"CT_Variant"`
	Variant  *CTVariant `xml:"variant"`
	Vector   *CTVector  `xml:"vector"`
	Array    *CTArray   `xml:"array"`
	Blob     []byte     `xml:"blob"`
	Oblob    []byte     `xml:"oblob"`
	Empty    *CTEmpty   `xml:"empty"`
	Null     *CTNull    `xml:"null"`
	I1       byte       `xml:"i1"`
	I2       int16      `xml:"i2"`
	I4       int        `xml:"i4"`
	I8       int64      `xml:"i8"`
	Int      int        `xml:"int"`
	Ui1      byte       `xml:"ui1"`
	Ui2      uint16     `xml:"ui2"`
	Ui4      uint32     `xml:"ui4"`
	Ui8      uint64     `xml:"ui8"`
	Uint     uint32     `xml:"uint"`
	R4       *Float     `xml:"r4"`
	R8       float64    `xml:"r8"`
	Decimal  float64    `xml:"decimal"`
	Lpstr    string     `xml:"lpstr"`
	Lpwstr   string     `xml:"lpwstr"`
	Bstr     string     `xml:"bstr"`
	Date     time.Time  `xml:"date"`
	Filetime time.Time  `xml:"filetime"`
	Bool     bool       `xml:"bool"`
	Cy       string     `xml:"cy"`
	Error    string     `xml:"error"`
	Stream   []byte     `xml:"stream"`
	Ostream  []byte     `xml:"ostream"`
	Storage  []byte     `xml:"storage"`
	Ostorage []byte     `xml:"ostorage"`
	Vstream  *CTVstream `xml:"vstream"`
	Clsid    string     `xml:"clsid"`
}

// CTVstream ...
type CTVstream struct {
	XMLName     xml.Name `xml:"CT_Vstream"`
	VersionAttr *STGuid  `xml:"version,attr,omitempty"`
}

// Variant ...
type Variant *CTVariant

// Vector ...
type Vector *CTVector

// Array ...
type Array *CTArray

// Blob ...
type Blob []byte

// Oblob ...
type Oblob []byte

// Empty ...
type Empty *CTEmpty

// Null ...
type Null *CTNull

// I1 ...
type I1 byte

// I2 ...
type I2 int16

// I4 ...
type I4 int

// I8 ...
type I8 int64

// Int ...
type Int int

// Ui1 ...
type Ui1 byte

// Ui2 ...
type Ui2 uint16

// Ui4 ...
type Ui4 uint32

// Ui8 ...
type Ui8 uint64

// Uint ...
type Uint uint32

// R4 ...
type R4 *Float

// R8 ...
type R8 float64

// Decimal ...
type Decimal float64

// Lpstr ...
type Lpstr string

// Lpwstr ...
type Lpwstr string

// Bstr ...
type Bstr string

// Date ...
type Date time.Time

// Filetime ...
type Filetime time.Time

// Bool ...
type Bool bool

// Cy ...
type Cy string

// Error ...
type Error string

// Stream ...
type Stream []byte

// Ostream ...
type Ostream []byte

// Storage ...
type Storage []byte

// Ostorage ...
type Ostorage []byte

// Vstream ...
type Vstream *CTVstream

// Clsid ...
type Clsid string
